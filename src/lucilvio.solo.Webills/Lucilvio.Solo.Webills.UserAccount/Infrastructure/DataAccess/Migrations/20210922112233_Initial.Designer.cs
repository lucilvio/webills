// <auto-generated />
using System;
using Lucilvio.Solo.Webills.UserAccount.Infraestructure.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lucilvio.Solo.Webills.UserAccount.Infrastructure.DataAccess.Migrations
{
    [DbContext(typeof(UserAccountDataContext))]
    [Migration("20210922112233_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lucilvio.Solo.Architecture.Outbox.OutgoingEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("OutgoingEvents", "UserAccount");
                });

            modelBuilder.Entity("Lucilvio.Solo.Webills.UserAccount.Domain.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("TermAccepted")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Accounts", "UserAccount");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f427511-ccdc-4fa3-aabf-822e4e93a693"),
                            Login = "admin@mail.com",
                            Password = "7C4A8D09CA3762AF61E59520943DC26494F8941B",
                            TermAccepted = true,
                            UserId = new Guid("6aabfb95-7694-411a-9f27-a6cbc4296a6a")
                        });
                });

            modelBuilder.Entity("Lucilvio.Solo.Webills.UserAccount.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Users", "UserAccount");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6aabfb95-7694-411a-9f27-a6cbc4296a6a"),
                            Email = "admin@mail.com",
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("Lucilvio.Solo.Webills.UserAccount.Domain.Account", b =>
                {
                    b.HasOne("Lucilvio.Solo.Webills.UserAccount.Domain.User", null)
                        .WithOne("Account")
                        .HasForeignKey("Lucilvio.Solo.Webills.UserAccount.Domain.Account", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lucilvio.Solo.Webills.UserAccount.Domain.User", b =>
                {
                    b.Navigation("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
